//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Usuario", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class Usuario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Clima", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class Clima : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClimaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WindField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClimaID {
            get {
                return this.ClimaIDField;
            }
            set {
                if ((this.ClimaIDField.Equals(value) != true)) {
                    this.ClimaIDField = value;
                    this.RaisePropertyChanged("ClimaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Humidity {
            get {
                return this.HumidityField;
            }
            set {
                if ((this.HumidityField.Equals(value) != true)) {
                    this.HumidityField = value;
                    this.RaisePropertyChanged("Humidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((this.TemperatureField.Equals(value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Wind {
            get {
                return this.WindField;
            }
            set {
                if ((this.WindField.Equals(value) != true)) {
                    this.WindField = value;
                    this.RaisePropertyChanged("Wind");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Repuesta", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class Repuesta : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessangeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Messange {
            get {
                return this.MessangeField;
            }
            set {
                if ((object.ReferenceEquals(this.MessangeField, value) != true)) {
                    this.MessangeField = value;
                    this.RaisePropertyChanged("Messange");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IServiceClimate")]
    public interface IServiceClimate {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClimate/Login", ReplyAction="http://tempuri.org/IServiceClimate/LoginResponse")]
        Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Usuario Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClimate/Login", ReplyAction="http://tempuri.org/IServiceClimate/LoginResponse")]
        System.Threading.Tasks.Task<Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Usuario> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClimate/Registar", ReplyAction="http://tempuri.org/IServiceClimate/RegistarResponse")]
        Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Repuesta Registar(Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Clima clima);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClimate/Registar", ReplyAction="http://tempuri.org/IServiceClimate/RegistarResponse")]
        System.Threading.Tasks.Task<Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Repuesta> RegistarAsync(Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Clima clima);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClimate/Actualizar", ReplyAction="http://tempuri.org/IServiceClimate/ActualizarResponse")]
        Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Repuesta Actualizar(Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Clima clima);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClimate/Actualizar", ReplyAction="http://tempuri.org/IServiceClimate/ActualizarResponse")]
        System.Threading.Tasks.Task<Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Repuesta> ActualizarAsync(Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Clima clima);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClimate/Eliminar", ReplyAction="http://tempuri.org/IServiceClimate/EliminarResponse")]
        Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Repuesta Eliminar(string climaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClimate/Eliminar", ReplyAction="http://tempuri.org/IServiceClimate/EliminarResponse")]
        System.Threading.Tasks.Task<Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Repuesta> EliminarAsync(string climaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClimate/Consultar", ReplyAction="http://tempuri.org/IServiceClimate/ConsultarResponse")]
        Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Clima Consultar(string climaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClimate/Consultar", ReplyAction="http://tempuri.org/IServiceClimate/ConsultarResponse")]
        System.Threading.Tasks.Task<Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Clima> ConsultarAsync(string climaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClimate/ConsultarTodos", ReplyAction="http://tempuri.org/IServiceClimate/ConsultarTodosResponse")]
        Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Clima[] ConsultarTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceClimate/ConsultarTodos", ReplyAction="http://tempuri.org/IServiceClimate/ConsultarTodosResponse")]
        System.Threading.Tasks.Task<Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Clima[]> ConsultarTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceClimateChannel : Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.IServiceClimate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClimateClient : System.ServiceModel.ClientBase<Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.IServiceClimate>, Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.IServiceClimate {
        
        public ServiceClimateClient() {
        }
        
        public ServiceClimateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClimateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClimateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClimateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Usuario Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Usuario> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Repuesta Registar(Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Clima clima) {
            return base.Channel.Registar(clima);
        }
        
        public System.Threading.Tasks.Task<Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Repuesta> RegistarAsync(Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Clima clima) {
            return base.Channel.RegistarAsync(clima);
        }
        
        public Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Repuesta Actualizar(Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Clima clima) {
            return base.Channel.Actualizar(clima);
        }
        
        public System.Threading.Tasks.Task<Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Repuesta> ActualizarAsync(Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Clima clima) {
            return base.Channel.ActualizarAsync(clima);
        }
        
        public Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Repuesta Eliminar(string climaId) {
            return base.Channel.Eliminar(climaId);
        }
        
        public System.Threading.Tasks.Task<Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Repuesta> EliminarAsync(string climaId) {
            return base.Channel.EliminarAsync(climaId);
        }
        
        public Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Clima Consultar(string climaId) {
            return base.Channel.Consultar(climaId);
        }
        
        public System.Threading.Tasks.Task<Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Clima> ConsultarAsync(string climaId) {
            return base.Channel.ConsultarAsync(climaId);
        }
        
        public Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Clima[] ConsultarTodos() {
            return base.Channel.ConsultarTodos();
        }
        
        public System.Threading.Tasks.Task<Olimpia.Balanceador.Pruebas.Unitarias.ServiceReference1.Clima[]> ConsultarTodosAsync() {
            return base.Channel.ConsultarTodosAsync();
        }
    }
}
